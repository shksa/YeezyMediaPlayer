{"version":3,"sources":["components/common/common.js","App/App.js","App/style.js","assets/spinner.svg","components/Sidebar/MediaList/style.js","components/Sidebar/MediaItem/style.js","components/Loader/style.js","components/Loader/Loader.js","components/Sidebar/MediaItem/MediaItem.js","components/Sidebar/MediaList/MediaList.js","components/Sidebar/style.js","components/Sidebar/Sidebar.js","components/MediaViewer/style.js","components/MediaViewer/MediaViewer.js","utils.js","serviceWorker.js","index.js"],"names":["MenuIcon","styled","i","_templateObject","_ref","isSidebarOpen","_ref2","insideComp","SearchBar","input","_templateObject2","App","state","mediaURL","utils","showSidebar","handleMediaURLChange","console","log","_this","setState","toggleSidebarVisibility","closeSidebar","_this$state","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_style__WEBPACK_IMPORTED_MODULE_7__","_components_Sidebar_Sidebar__WEBPACK_IMPORTED_MODULE_8__","_components_MediaViewer_MediaViewer__WEBPACK_IMPORTED_MODULE_9__","Component","hot","module","div","exports","__webpack_require__","p","UnList","ul","Li","li","style_templateObject","ItemAndSearchBarWrapper","Item","_templateObject3","isClicked","ItemSearchBar","_templateObject4","showSearchBar","loaderImg","img","Loader_style_templateObject","forComp","Loader","react_default","src","SpinnerSVG","alt","MediaItem","children","showLoader","childrenToShow","handleMediaItemClick","_callee","itemURL","html","LinkNodes","mediaListNodes","regenerator_default","wrap","_context","prev","next","props","setClickedItemID","itemID","charAt","length","slice","window","screen","width","handleSidebarVisibilty","abrupt","sent","t0","alert","stop","handleItemSearchBar","event","query","target","value","_this$props","itemValue","clickedItemID","itemValueSanitized","onClick","onKeyUp","placeholder","Sidebar_MediaList_MediaList","mediaListNodesToShow","components_Loader_Loader","React","MediaList","map","node","idx","nodeValue","innerText","nodeHrefURL","attributes","Sidebar_MediaItem_MediaItem","key","MediaListContainer","Sidebar_style_templateObject","IconAndMediaTypeWrapper","style_templateObject2","MediaTypesContainer","style_templateObject3","MediaTypeWrapper","style_templateObject4","MediaType","_templateObject5","MediaSourceURLInput","_templateObject6","MediaListWrapper","_templateObject7","css","_templateObject8","ListSearchBar","_templateObject9","Sidebar","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","mediaTypeToURLSourceMap","mediaTypes","defaultMediaTypeToShow","getMedia","asyncToGenerator","mark","mediaSourceURL","_x","apply","arguments","componentWillMount","defaultMediaURL","concat","handleMediaTypeOnClick","mediaType","handleMediaSourceURLInput","preventDefault","keyCode","handleListSearchBar","keys","_this2","common","className","defaultChecked","type","name","MediaViewerContainer","MediaURLInputWrapper","MediaURLInput","MediaPlayerWrapper","VideoPlayer","video","AudioPlayer","audio","MediaViewer","handleMediaURLInput","endsWith","autoPlay","controls","domParser","DOMParser","SampleHTML","hostURL","location","href","GetLinkNodes","mediaListHTML","ATagNodeCollection","parseFromString","getElementsByTagName","LinksNodes","item","shift","ProcessLinkNodes","forEach","replace","HttpError","_Error","statusCode","statusText","_Users_sreekarnimbalkar_hobby_projs_media_player_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_sreekarnimbalkar_hobby_projs_media_player_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_sreekarnimbalkar_hobby_projs_media_player_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","_Users_sreekarnimbalkar_hobby_projs_media_player_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","_Users_sreekarnimbalkar_hobby_projs_media_player_node_modules_babel_runtime_helpers_esm_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_6__","Error","FetchHtml","_Users_sreekarnimbalkar_hobby_projs_media_player_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_sreekarnimbalkar_hobby_projs_media_player_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","url","delay","response","_args","undefined","fetch","then","resp","Promise","resolve","setTimeout","ok","status","text","DefaultVid","MediaTypeToURLSourceMap","TVShows","Movies","CORSProxy","filterList","list","toUpperCase","pq","FastPriorityQueue","b","indexOfQuery","indexOf","add","output","obj","push","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","headers","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.86287b5b.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const MenuIcon = styled.i`\n  cursor: pointer;\n  display: ${({isSidebarOpen}) => isSidebarOpen === true ? \"none\" : \"block\"};\n  color: ${({insideComp}) => insideComp === \"MediaViewer\" && \"white\"};\n`\n\nexport const SearchBar = styled.input`\n  width: 100px;\n  padding: 5px;\n  font-size: 15px;\n  background-color: transparent;\n  color: black;\n  border: none;\n  border-bottom: 2px solid;\n  outline: none;\n\n  :focus {\n    border-color: #1a73e8;\n  }\n\n  ::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */\n    color: black;\n    opacity: 1; /* Firefox */\n  }\n\n  :-ms-input-placeholder { /* Internet Explorer 10-11 */\n      color: black;\n  }\n\n  ::-ms-input-placeholder { /* Microsoft Edge */\n      color: black;\n  }\n`;","import React, { Component } from 'react';\nimport { hot } from 'react-hot-loader'\nimport * as s from './style'\nimport Sidebar from '../components/Sidebar/Sidebar';\nimport MediaViewer from '../components/MediaViewer/MediaViewer'\nimport * as utils from '../utils';\n\nclass App extends Component {\n\n  state = {mediaURL: utils.DefaultVid, showSidebar: true}\n\n  \n  handleMediaURLChange = (mediaURL) => {\n    console.log(\"mediaURL\", mediaURL)\n    this.setState({mediaURL})\n  }\n\n  toggleSidebarVisibility = () => {\n    this.setState((state) => ({\n      showSidebar: !state.showSidebar\n    }))\n  }\n\n  closeSidebar = () => {this.setState({showSidebar: false})}\n\n  render() {\n    // console.log(\"In render of App, state: \", this.state)\n    const {mediaURL, showSidebar} = this.state\n    return (\n      <s.App>\n        <Sidebar \n          closeSidebar={this.closeSidebar} \n          showSidebar={showSidebar} \n          handleMediaURLChange={this.handleMediaURLChange} \n          toggleSidebarVisibility={this.toggleSidebarVisibility}\n        />\n        <MediaViewer \n          isSidebarOpen={showSidebar} \n          mediaURL={mediaURL} \n          handleMediaURLChange={this.handleMediaURLChange} \n          toggleSidebarVisibility={this.toggleSidebarVisibility}  \n        />\n      </s.App>\n    );\n  }\n}\n\nexport default hot(module)(App);\n","import styled from 'styled-components';\n\nexport const App = styled.div`\ndisplay: flex;\nheight: 100vh;\nwidth: 100vw;\n`\n\n\n\n","module.exports = __webpack_public_path__ + \"static/media/spinner.c49febc4.svg\";","import styled from 'styled-components';\n\n\n\nexport const UnList = styled.ul`\n  padding-inline-start: 20px;\n`","import styled from 'styled-components';\nimport { SearchBar } from '../../common/common';\n\n\nexport const Li = styled.li`\n  cursor: pointer;\n  margin: 10px 0 10px 0;\n`;\n\nexport const ItemAndSearchBarWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Item = styled.p`\n  margin: 0 10px 0 0;\n  :hover {\n    color: #85144b;\n  }\n  :active {\n    color: #39CCCC;\n  }\n  color: ${({isClicked}) => isClicked && '#2ECC40'};\n  font-weight: bold;\n`\n\nexport const ItemSearchBar = styled(SearchBar)`\n  display: ${({showSearchBar}) => !showSearchBar && \"none\"};\n  width: 50px;\n  padding: 4px 5px 2px 5px;\n`","import styled from 'styled-components';\nexport const loaderImg = styled.img`\n  background: none;\n  height: ${({forComp}) => forComp === \"mediaItem\" ? \"100px\" : null};\n  width: ${({forComp}) => forComp === \"mediaItem\" ? \"100px\" : null};\n`;","import React from 'react';\nimport SpinnerSVG from '../../assets/spinner.svg'\nimport * as s from './style'\n\nconst Loader = ({forComp}) => (\n  <s.loaderImg src={SpinnerSVG} alt=\"loader\" forComp={forComp} />\n);\n\nexport default Loader;","import React from 'react';\nimport * as s from './style'\nimport * as utils from '../../../utils'\nimport MediaList from '../MediaList/MediaList'\nimport Loader from '../../Loader/Loader'\n\n\nclass MediaItem extends React.Component {\n\n  state = {children: null, showLoader: false, childrenToShow: null, showSearchBar: false}\n  \n  handleMediaItemClick = async() => {\n    this.props.setClickedItemID(this.props.itemID)\n    const itemURL = this.props.itemURL\n    if (itemURL.charAt(itemURL.length - 1) !== '/') {\n      const mediaURL = itemURL.slice(utils.CORSProxy.length)\n      if (window.screen.width < 768) {\n        this.props.handleMediaURLChange(mediaURL)\n        this.props.handleSidebarVisibilty(false)\n      } else {\n        this.props.handleMediaURLChange(mediaURL)\n      }\n      return\n    }\n    this.setState({children: null, showLoader: true, childrenToShow: null})\n    let html\n    try {\n      console.log(\"fetching..\", itemURL)\n      html = await utils.FetchHtml(itemURL)\n    } catch (error) {\n      if (error instanceof utils.HttpError){\n        alert(error)\n        return\n      } else {\n        alert(error)\n        html = utils.SampleHTML\n      }\n    }\n    const LinkNodes = utils.GetLinkNodes(html)\n    // console.log(\"LinkNodes before\", LinkNodes)\n    const mediaListNodes = utils.ProcessLinkNodes(LinkNodes, itemURL)\n    // console.log(\"LinkNodes after\", mediaListNodes)\n    this.setState({showSearchBar: true, children: mediaListNodes, childrenToShow: mediaListNodes, showLoader: false})\n  }\n\n  handleItemSearchBar = (event) => {\n    const query = event.target.value\n    const {children} = this.state\n    if (query === \"\") {\n      // console.log(\"query empty\")\n      this.setState({childrenToShow: children})\n    } else {\n      const childrenToShow = utils.filterList(query, children)\n      this.setState({childrenToShow})\n    }\n  }\n\n  render() {\n    const {\n      itemValue, \n      handleMediaURLChange, \n      handleSidebarVisibilty, \n      itemID,  \n      clickedItemID, \n      setClickedItemID,\n    } = this.props\n    \n    const {showLoader, children, childrenToShow, showSearchBar} = this.state\n    // console.log(\"showSearchBar\", showSearchBar)\n    const itemValueSanitized = itemValue.slice(0, itemValue.length-1)\n    return (\n      <s.Li>\n        <s.ItemAndSearchBarWrapper>\n          <s.Item isClicked={clickedItemID === itemID} onClick={this.handleMediaItemClick} >{itemValueSanitized}</s.Item> {/*onClick CANNOT be on the li tag, becuase it will be called for its the children too*/}\n          <s.ItemSearchBar showSearchBar={showSearchBar} onKeyUp={this.handleItemSearchBar} placeholder=\"search\"/>\n        </s.ItemAndSearchBarWrapper>\n        {children && \n        <MediaList\n          mediaListNodesToShow={childrenToShow} \n          clickedItemID={clickedItemID} \n          setClickedItemID={setClickedItemID} \n          handleSidebarVisibilty={handleSidebarVisibilty} \n          handleMediaURLChange={handleMediaURLChange} \n        /> }\n        {showLoader && <ul><Loader forComp=\"mediaItem\"/></ul>}\n      </s.Li> \n    );\n  }\n}\n\nexport default MediaItem;","import React from 'react';\nimport * as s from './style'\nimport MediaItem from '../MediaItem/MediaItem'\n\n\nclass MediaList extends React.Component {\n\n  render() {\n    const { \n      handleMediaURLChange, \n      handleSidebarVisibilty, \n      setClickedItemID, \n      clickedItemID,\n      mediaListNodesToShow\n    } = this.props\n    \n    // console.log(\"mediaListNodes in MediaList: \", mediaListNodes)\n    // console.log(\"mediaListNodesToShow in MediaList: \", mediaListNodesToShow)\n    return (\n        <s.UnList>\n          {\n            mediaListNodesToShow.map((node, idx) => {\n              const nodeValue = node.innerText\n              const nodeHrefURL = node.attributes[\"href\"].value\n              // console.log(\"in media list, nodeValue: \", nodeValue)\n              // console.log(\"in media list, nodeHrefURL: \", nodeHrefURL)\n              return (\n                <MediaItem\n                  clickedItemID={clickedItemID} \n                  setClickedItemID={setClickedItemID} \n                  key={nodeValue+idx} \n                  itemID={nodeValue+idx} \n                  itemValue={nodeValue} \n                  itemURL={nodeHrefURL} \n                  handleSidebarVisibilty={handleSidebarVisibilty} \n                  handleMediaURLChange={handleMediaURLChange}\n                />\n              )\n            })\n          }\n        </s.UnList>\n    );\n  }\n}\nexport default MediaList;","import styled, {css} from 'styled-components';\nimport { SearchBar } from '../common/common';\nexport const MediaListContainer = styled.div`\n  width: 30%;\n  display: ${({showSidebar}) => showSidebar ? \"flex\" : \"none\" };\n  flex-direction: column;\n  background-color: #FFFFFF;\n  @media (max-width: 768px) {\n    width: 85%;\n    position: absolute;\n    z-index: 1;\n    height: 100%; /* beacuse position property fucks with it's flex item behavior */\n  }\n`;\n\nexport const IconAndMediaTypeWrapper = styled.div`\n  padding: 20px 0 20px 20px;\n  display: flex;\n  align-items: center;\n`;\n\nexport const MediaTypesContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: space-around;\n`\n\nexport const MediaTypeWrapper = styled.div`\n  font-size: 20px;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n`\n\nexport const MediaType = styled.input`\n  margin-right: 5px;\n`\n\nexport const MediaSourceURLInput = styled.input`\n  margin: 0 10px 0 10px;\n  padding: 5px;\n  font-size: 15px;\n  background-color: transparent;\n  color: black;\n  border: 2px solid black;\n  border-radius: 15px;\n  outline: none;\n  width: 40%;\n  align-self: center;\n`\n\nexport const MediaListWrapper = styled.div`\n  margin: 10px 0 0 10px;\n  flex: 1;  \n  overflow: scroll;\n  ${({showLoader}) => showLoader &&\n  css`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  `\n  }\n`;\n\nexport const ListSearchBar = styled(SearchBar)`\n\n`","import React from 'react';\nimport MediaList from './MediaList/MediaList'\nimport * as s from './style';\nimport Loader from '../Loader/Loader'\nimport * as utils from '../../utils'\nimport * as common from '../common/common'\n\n\nclass Sidebar extends React.Component {\n\n  state = { mediaListNodes: null, mediaListNodesToShow: null, clickedItemID: null, mediaTypeToURLSourceMap: null, mediaTypes: null, defaultMediaTypeToShow: null }\n\n  constructor(props) {\n    super(props)\n    this.state.mediaTypeToURLSourceMap = utils.MediaTypeToURLSourceMap\n    this.state.mediaTypes = Object.keys(utils.MediaTypeToURLSourceMap)\n    this.state.defaultMediaTypeToShow = this.state.mediaTypes[0]\n  }\n\n  setClickedItemID = (clickedItemID) => {this.setState({clickedItemID})}\n\n  getMedia = async(mediaSourceURL) => {\n    this.setState({mediaListNodes: null, mediaListNodesToShow: null})\n    let html\n    try {\n      console.log(\"fetching..\", mediaSourceURL)\n      html = await utils.FetchHtml(mediaSourceURL)\n    } catch (error) {\n      if (error instanceof utils.HttpError){\n        alert(error)\n        return\n      } else {\n        alert(error)\n        html = utils.SampleHTML\n      }\n    }\n    const LinkNodes = utils.GetLinkNodes(html)\n    // console.log(\"LinkNodes before\", LinkNodes)\n    const mediaListNodes = utils.ProcessLinkNodes(LinkNodes, mediaSourceURL)\n    // console.log(\"LinkNodes after\", mediaListNodes)\n    \n    // console.log(mediaListNodes)\n    this.setState({mediaListNodes, mediaListNodesToShow: mediaListNodes})\n  }\n\n  componentWillMount = () => {\n    const defaultMediaTypeToShow = this.state.defaultMediaTypeToShow\n    const mediaURL = this.state.mediaTypeToURLSourceMap[defaultMediaTypeToShow]\n    const defaultMediaURL = `${utils.CORSProxy}${mediaURL}`\n    this.getMedia(defaultMediaURL)\n  }\n\n  handleMediaTypeOnClick = (event) => {\n    const mediaType = event.target.value\n    // console.log(mediaType)\n    const mediaSourceURL = `${utils.CORSProxy}${this.state.mediaTypeToURLSourceMap[mediaType]}`\n    this.getMedia(mediaSourceURL)\n  }\n\n  handleMediaSourceURLInput = (event) => {\n    event.preventDefault()\n    if (event.keyCode === 13) {\n      const mediaSourceURL = `${utils.CORSProxy}${event.target.value}`\n      this.getMedia(mediaSourceURL)\n    }\n  }\n\n\n  handleListSearchBar = (event) => {\n    const query = event.target.value\n    const {mediaListNodes} = this.state\n    if (query === \"\") {\n      // console.log(\"query empty\")\n      this.setState({mediaListNodesToShow: mediaListNodes})\n    } else {\n      const mediaListNodesToShow = utils.filterList(query, mediaListNodes)\n      this.setState({mediaListNodesToShow})\n    }\n  }\n\n  render() {\n    const {handleMediaURLChange, showSidebar, toggleSidebarVisibility, closeSidebar} = this.props\n    const {clickedItemID, mediaListNodesToShow, mediaTypes, defaultMediaTypeToShow} = this.state\n    // console.log(\"mediaTypes: \", mediaTypes)\n    const showLoader = mediaListNodesToShow === null\n    return (\n      <s.MediaListContainer showSidebar={showSidebar}>\n        <s.IconAndMediaTypeWrapper>\n          <common.MenuIcon className=\"material-icons\" onClick={toggleSidebarVisibility}>menu</common.MenuIcon>\n          <s.MediaTypesContainer>\n            {\n              mediaTypes.map((mediaType) => \n                (<s.MediaTypeWrapper key={mediaType}>\n                  <s.MediaType \n                    defaultChecked={defaultMediaTypeToShow === mediaType} \n                    onClick={this.handleMediaTypeOnClick} \n                    type=\"radio\" \n                    name=\"mediaType\" \n                    value={mediaType} \n                  />\n                  {mediaType}\n                </s.MediaTypeWrapper>)\n              )\n            }\n          </s.MediaTypesContainer>\n        </s.IconAndMediaTypeWrapper>\n        <s.MediaSourceURLInput onKeyUp={this.handleMediaSourceURLInput} placeholder=\"Or enter a media source URL\"/>\n        {showLoader\n          ? <Loader />\n          : <s.MediaListWrapper showLoader={showLoader}>\n              <s.ListSearchBar onKeyUp={this.handleListSearchBar} placeholder=\"Search..\" />\n              <MediaList\n                mediaListNodesToShow={mediaListNodesToShow} \n                clickedItemID={clickedItemID} \n                setClickedItemID={this.setClickedItemID} \n                closeSidebar={closeSidebar}\n                handleMediaURLChange={handleMediaURLChange} \n              />\n            </s.MediaListWrapper>\n          }\n      </s.MediaListContainer>\n    );  \n  }\n}\n\nexport default Sidebar;","import styled from 'styled-components';\n\nexport const MediaViewerContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  background-color: black;\n`;\n\nexport const MediaURLInputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex: 1;\n  justify-content: space-around;\n`\n\nexport const MediaURLInput = styled.input`\n  padding: 10px;\n  background-color: black;\n  outline: none;\n  font-weight: bold;\n  font-size: 15px;\n  color: white;\n`\n\nexport const MediaPlayerWrapper = styled.div`\n  flex: 5;\n  background-color: black;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const VideoPlayer = styled.video`\n  max-height: 100%;\n  max-width: 100%;\n`\n\nexport const AudioPlayer = styled.audio``","import React from 'react';\nimport * as s from './style'\nimport * as common from '../common/common'\n\nclass MediaViewer extends React.Component {\n\n  handleMediaURLInput = (event) => {\n    if (event.keyCode === 13) {\n      const mediaURL = event.target.value\n      this.props.handleMediaURLChange(mediaURL)\n    }\n  }\n\n  render() {\n    const {mediaURL, toggleSidebarVisibility, isSidebarOpen} = this.props\n    return (\n      <s.MediaViewerContainer isSidebarOpen={isSidebarOpen}>\n        <s.MediaURLInputWrapper>\n            <common.MenuIcon insideComp=\"MediaViewer\" className=\"material-icons\" isSidebarOpen={isSidebarOpen} onClick={toggleSidebarVisibility} >menu</common.MenuIcon>\n            <s.MediaURLInput onKeyUp={this.handleMediaURLInput} placeholder=\"Enter video link here...\" />\n        </s.MediaURLInputWrapper>\n        <s.MediaPlayerWrapper>\n          {\n            mediaURL.endsWith(\".mp3\") || mediaURL.endsWith(\".wav\") || mediaURL.endsWith(\".ogg\")\n            ?\n            <s.AudioPlayer autoPlay src={mediaURL} controls />\n            :\n            <s.VideoPlayer autoPlay src={mediaURL} controls />\n          }\n        </s.MediaPlayerWrapper>\n      </s.MediaViewerContainer>\n    );\n  }\n}\n\nexport default MediaViewer;","import FastPriorityQueue from 'fastpriorityqueue'\nconst domParser = new DOMParser()\n\nexport const SampleHTML = `\n<html>\n<body>\n<a href=\"../\"></a>\n<a href=\"hrefBobby\">Bobby Lee/</a>\n<a href=\"hrefJoeRogan\">Joe Rogan/</a>\n<a href=\"hrefBillBurr\">Bill Burr/</a>\n</body>\n</html>\n`\n\nconst hostURL = window.location.href\n\nexport const GetLinkNodes = (mediaListHTML) => {\n  const doc = domParser.parseFromString(mediaListHTML, \"text/html\")\n  const ATagNodeCollection = doc.getElementsByTagName(\"a\")\n  const LinksNodes = Object.keys(ATagNodeCollection).map((key) => ATagNodeCollection.item(key))\n  LinksNodes.shift() // first elem is <a href=\"../\"></a>, should be removed from the LinksNodes\n  return LinksNodes\n}\n\nexport const ProcessLinkNodes = (LinksNodes, mediaURL) => {\n  LinksNodes.forEach((node) => {\n    node.href = node.href.replace(hostURL, mediaURL)\n  })\n  return LinksNodes\n}\n\nexport class HttpError extends Error {\n  name = \"HTTPError\"\n  constructor(statusCode, statusText) {\n    super(statusText)\n    this.statusCode = statusCode\n    this.statusText = statusText\n  }\n}\n\nexport const FetchHtml = async(url, delay = 0) => {\n  const response = await fetch(url).then(resp => new Promise(resolve => setTimeout(resolve, delay, resp)))\n  if(!response.ok) { // response.ok is false for responses with non 200-299 status codes.\n    throw new HttpError(response.status, response.statusText)\n  }\n  const html = await response.text()\n  return html\n}\n\nexport const DefaultVid = \"\"\n\nexport const MediaTypeToURLSourceMap = {\n  TVShows: \"http://dl.uploadfdl.com/files/Serial/\",\n  Movies: \"http://79.127.126.110/Movie/\",\n}\n\nexport const CORSProxy = \"https://cors.io/?\"\n\nexport const filterList = (query, list) => {\n  query = query.toUpperCase()\n  var pq = new FastPriorityQueue((a, b) => a.indexOfQuery < b.indexOfQuery);\n  list.forEach((node) => {\n    const indexOfQuery = node.innerText.toUpperCase().indexOf(query)\n    if (indexOfQuery > -1) { // AnyString.indexOf(\"\") always > -1\n      pq.add({node, indexOfQuery})\n    }\n  })\n  let output = []\n  pq.forEach((obj) => output.push(obj.node))\n  return output\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}